[project]
name = "python-template"
version = "0.1.0"
description = "Template for python projects, using modern tooling and practices"
readme = "README.md"
authors = [
    { name = "Author Name", email = "author@email.com" }
]

# For public libraries, use the oldest supported python version
# For private libraries, use the most recent python version
requires-python = ">=3.13"

dependencies = []

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pyright>=1.1.400",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.7",
]

# ------------------------------------------------------------------------------
# Build
# ------------------------------------------------------------------------------

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/python_template"]

# https://docs.astral.sh/uv/concepts/projects/config/#project-packaging
# will force a project to be built and installed into the project environment
[tool.uv]
package = true

# Make project runnable from the command line
# After installing a library, running `python_template` will run the `main` function
[project.scripts]
python-template = "python_template.main:main"

# ------------------------------------------------------------------------------
# Linting
# ------------------------------------------------------------------------------

[tool.ruff]
target-version = "py313"  # Choose same version as `requires-python`
line-length = 120

# Set of rules taken from https://docs.astral.sh/ruff/linter/#rule-selection
[tool.ruff.lint]
select = [
    "E",  # pycodestyle
    "F",  # Pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "UP",  # pyupgrade
    "SIM",  # flake8-simplify
]

# Group first-party packages last
[tool.ruff.lint.isort]
known-first-party = ["python_template"]

[tool.pyright]
venvPath = "."
venv = ".venv"
strict = ["**/*.py"]
pythonVersion = "3.13"  # Choose same version as `requires-python`

[tool.coverage.report]
exclude_also = [
    "if __name__ == .__main__.:",
]
